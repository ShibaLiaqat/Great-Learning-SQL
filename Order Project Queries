1.
SELECT PRODUCT_CLASS_CODE,PRODUCT_ID,PRODUCT_DESC,PRODUCT_PRICE,
CASE PRODUCT_CLASS_CODE
	WHEN '2050' THEN PRODUCT_PRICE+2000
	WHEN '2051' THEN PRODUCT_PRICE+500
	WHEN '2052' THEN PRODUCT_PRICE+600
	ELSE PRODUCT_PRICE
END NEW_PRICE
FROM product ORDER BY PRODUCT_CLASS_CODE DESC;
--------------------------------------
2
SELECT a.PRODUCT_CLASS_DESC,b.PRODUCT_ID,b.PRODUCT_DESC,b.PRODUCT_QUANTITY_AVAIL,
CASE PRODUCT_CLASS_DESC
    WHEN PRODUCT_CLASS_DESC IN ('Electronics','Computer')
		THEN 
			(CASE 
			WHEN (PRODUCT_QUANTITY_AVAIL&lt;=10) THEN 'LOW STOCK' 
			WHEN (PRODUCT_QUANTITY_AVAIL BETWEEN 11 and 30) THEN 'IN STOCK' 
			WHEN (PRODUCT_QUANTITY_AVAIL&gt;=31) THEN 'ENOUGH STOCK' 
			WHEN (PRODUCT_QUANTITY_AVAIL=0) THEN 'OUT OF STOCK' 
			END)
	WHEN PRODUCT_CLASS_DESC IN ('Stationery','Clothes')
		THEN 
			(CASE 
			WHEN (PRODUCT_QUANTITY_AVAIL&lt;=20) THEN 'LOW STOCK' 
			WHEN (PRODUCT_QUANTITY_AVAIL BETWEEN 21 and 80) THEN 'IN STOCK' 
			WHEN (PRODUCT_QUANTITY_AVAIL&gt;=81) THEN 'ENOUGH STOCK' 
			WHEN (PRODUCT_QUANTITY_AVAIL=0) THEN 'OUT OF STOCK' 
			END)
	ELSE 
			(CASE 
			WHEN (PRODUCT_QUANTITY_AVAIL&lt;=15) THEN 'LOW STOCK' 
			WHEN (PRODUCT_QUANTITY_AVAIL BETWEEN 16 and 50) THEN 'IN STOCK' 
			WHEN (PRODUCT_QUANTITY_AVAIL&gt;=51) THEN 'ENOUGH STOCK' 
			WHEN (PRODUCT_QUANTITY_AVAIL=0) THEN 'OUT OF STOCK' 
			END)
END INVENTORY_STATUS
FROM PRODUCT_CLASS AS a JOIN PRODUCT AS b ON a.PRODUCT_CLASS_CODE=b.PRODUCT_CLASS_CODE
------------------
3
SELECT COUNTRY, count(city) AS CITY_COUNT FROM ADDRESS GROUP BY COUNTRY HAVING CITY_COUNT&gt;1 AND COUNTRY!='USA' and COUNTRY!='Malaysia' ORDER BY CITY DESC;
-----------------------
4
SELECT 
	a.CUSTOMER_ID,
	a.CUSTOMER_FNAME,
	b.CITY,
	b.PINCODE,
	c.ORDER_ID,
	f.PRODUCT_CLASS_DESC,
	e.PRODUCT_DESC,
	(d.PRODUCT_QUANTITY*e.PRODUCT_PRICE) AS SUBTOTAL
FROM
	ONLINE_CUSTOMER AS a JOIN ADDRESS AS b 
	ON
	a.ADDRESS_ID = b.ADDRESS_ID
    JOIN ORDER_HEADER AS c 
	ON
	a.CUSTOMER_ID = c.CUSTOMER_ID 
	JOIN ORDER_ITEMS AS d 
	ON
	c.ORDER_ID = d.ORDER_ID 
	JOIN PRODUCT AS e 
	ON
	d.PRODUCT_ID = e.PRODUCT_ID
	JOIN PRODUCT_CLASS AS f
	ON
	e.PRODUCT_CLASS_CODE = f.PRODUCT_CLASS_CODE
WHERE
	b.PINCODE NOT LIKE '%0%' AND c.ORDER_STATUS='Shipped'
ORDER BY
	a.CUSTOMER_FNAME,c.ORDER_DATE,SUBTOTAL;
----------------------------------
5
SELECT * FROM 
(SELECT a.PRODUCT_ID,PRODUCT_DESC,SUM(product_quantity) AS TOTAL_QUANTITY FROM ORDER_ITEMS a JOIN PRODUCT b ON a.product_id=b.product_id GROUP BY 1,2) ORDER BY total_quantity DESC LIMIT 1
-----------------------------------
6
SELECT
a.CUSTOMER_ID,
a.CUSTOMER_FNAME,
a.CUSTOMER_EMAIL,
c.ORDER_ID,
e.PRODUCT_DESC,
d.PRODUCT_QUANTITY,
(d.PRODUCT_QUANTITY*e.PRODUCT_PRICE) AS SUBTOTAL
FROM
ONLINE_CUSTOMER AS a 
left JOIN ORDER_HEADER AS c
ON
a.CUSTOMER_ID = c.CUSTOMER_ID
left JOIN ORDER_ITEMS AS d
ON
c.ORDER_ID = d.ORDER_ID
left JOIN PRODUCT AS e
ON
d.PRODUCT_ID = e.PRODUCT_ID;

7
select CARTON_ID,(len*width*height) AS CARTON_VOLUME FROM carton HAVING CARTON_VOLUME > ((SELECT SUM((a.PRODUCT_QUANTITY*b.len*b.width*b.height)) as TOTAL_VOLUME
FROM order_items AS a JOIN product AS b ON a.product_id=b.product_id where ORDER_ID=10006)) ORDER BY CARTON_VOLUME LIMIT 1
-----------------------
8
SELECT a.CUSTOMER_ID,a.CUSTOMER_FNAME,b.ORDER_ID,SUM(c.PRODUCT_QUANTITY) as PRODUCT_QUANTITY
FROM online_customer as a JOIN order_header as b on a.CUSTOMER_ID=b.CUSTOMER_ID JOIN order_items as c ON b.order_id=c.order_id
WHERE b.order_status='Shipped' AND b.order_id IN (SELECT ORDER_ID FROM order_items GROUP BY ORDER_ID HAVING SUM(PRODUCT_QUANTITY)>10) GROUP BY ORDER_ID 
------------------------
9
SELECT a.ORDER_ID, b.CUSTOMER_ID, b.CUSTOMER_FNAME,SUM(c.PRODUCT_QUANTITY) AS TOTAL_QUANTITY_OF_PRODUCTS
from order_header as a JOIN online_customer as b
on a.customer_id=b.customer_id 
LEFT JOIN order_items as c on a.order_id=c.order_id where a.ORDER_ID>10060 and a.order_status='Shipped' GROUP BY a.ORDER_ID;
-------------------------
10
Select c.PRODUCT_CLASS_DESC,sum(PRODUCT_QUANTITY) as TOTAL_QUANTITY ,sum(b.PRODUCT_PRICE*a.PRODUCT_QUANTITY) as TOTAL_VALUE
FROM order_items as a JOIN product as b on a.product_id = b.product_id 
JOIN product_class as c ON b.PRODUCT_CLASS_CODE = c.PRODUCT_CLASS_CODE 
JOIN order_header as d ON a.ORDER_ID=d.ORDER_ID
JOIN online_customer as e ON d.CUSTOMER_ID=e.CUSTOMER_ID
JOIN address as f ON e.ADDRESS_ID=f.ADDRESS_ID
WHERE COUNTRY NOT IN ('India','USA')
GROUP BY PRODUCT_CLASS_DESC
ORDER BY Total_Quantity DESC
LIMIT 1;
